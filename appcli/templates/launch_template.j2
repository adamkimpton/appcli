#!/usr/bin/env bash

##
 # Wrapper to launch the {{ app_name.capitalize() }} container.
 # _____________________________________________________________________________
 #
 # Created by brightSPARK Labs
 # www.brightsparklabs.com
 ##

# ------------------------------------------------------------------------------
# CONSTANT
# ------------------------------------------------------------------------------

# directory containing this script
readonly BASE_DIR=$(cd "$(dirname $0)" && pwd)

# {{ app_name.lower() }} home directory on the physical host
readonly {{ app_name.upper() }}_EXT_{{ app_name.upper() }}_HOME=${BASE_DIR}
export {{ app_name.upper() }}_EXT_{{ app_name.upper() }}_HOME

# {{ app_name.lower() }} version
readonly {{ app_name.upper() }}_VERSION={{ app_version }}

# {{ app_name.lower() }} root directory on the physical host
readonly {{ app_name.upper() }}_EXT_{{ app_name.upper() }}_ROOT=$(cd "${BASE_DIR}/.." && pwd)
export {{ app_name.upper() }}_EXT_{{ app_name.upper() }}_ROOT

# location to mount the physical host's root directory in the container
readonly {{ app_name.upper() }}_EXT_HOST_ROOT=/mnt/host
export {{ app_name.upper() }}_EXT_HOST_ROOT

# mandatory environment variables in {{ app_name.lower() }}-host.env file
declare -ra MANDATORY_ENV_VARIABLES=(
    {{ app_name.upper() }}_EXT_DATA_DIR
)

# ------------------------------------------------------------------------------
# LOGIC
# ------------------------------------------------------------------------------

function main()
{
    # if running 'configure' then use a reduced environment
    local _env=
    if [[ "${1:-}" == configure ]]; then
        _env="--volume /:${{ "{" + app_name.upper() }}_EXT_HOST_ROOT} --env {{ app_name.upper() }}_EXT_HOST_ROOT"
    else
        [[ -r "${BASE_DIR}/{{ app_name.lower() }}-host.env" ]] || {
            echo "ERROR: System has not been configured. Please run [$(dirname $0 | head -1)/{{ app_name.lower() }} configure]"
            exit 1
        }
        # read environment variables
        source "${BASE_DIR}/{{ app_name.lower() }}-host.env"
        # check mandatory environment variables
        for _env_var in ${MANDATORY_ENV_VARIABLES[@]}; do
            [[ -z ${!_env_var:-} ]] && print_error_and_exit "Environment variable [${_env_var}] has not been defined."
        done

        # ensure variables are passed through to docker container
        for _env_var in $(set | grep '^{{ app_name.upper() }}_EXT_' | cut -f1 -d=); do
            _env="${_env} --env ${_env_var}=${!_env_var}"
        done

        # mount the data dir
        _env="${_env} --volume ${{ "{" + app_name.upper() }}_EXT_DATA_DIR}:${{ "{" + app_name.upper() }}_EXT_DATA_DIR}"
    fi

    # launch container
    exec docker run \
        --name {{ app_name.lower() }} \
        -it \
        --rm \
        --network=host \
        ${_env} \
        --volume /etc/timezone:/etc/timezone:ro \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        --volume "${{ "{" + app_name.upper() }}_EXT_{{ app_name.upper() }}_ROOT}":"${{ "{" + app_name.upper() }}_EXT_{{ app_name.upper() }}_ROOT}" \
        --env {{ app_name.upper() }}_EXT_{{ app_name.upper() }}_HOME \
        brightsparklabs/{{ app_name.lower() }}:{{app_version}} $@
}

# ------------------------------------------------------------------------------
# LOGIC
# ------------------------------------------------------------------------------

main $@
